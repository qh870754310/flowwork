<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qh.modules.sys.dao.UserDao">
    
    <resultMap id="userMap" type="com.qh.modules.sys.entity.UserEntity">
        <result property="id" column="id"/>
        <result property="baid" column="baid"/>
        <result property="bapid" column="bapid"/>
        <result property="userName" column="user_name"/>
        <result property="passWord" column="pass_word"/>
        <result property="loginName" column="login_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="salt" column="salt"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone"/>
        <result property="photo" column="photo"/>
        <result property="email" column="email"/>
        <result property="createId" column="create_id"/>
        <result property="updateId" column="update_id"/>
        <result property="remark" column="remark"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, baid, bapid, user_name, pass_word, login_name, create_time, update_time, `status`, salt, phone, photo, email, create_id, update_id, remark
    </sql>

    <select id="queryObject" resultType="com.qh.modules.sys.entity.UserEntity" resultMap="userMap">
        SELECT
        <include refid="Base_Column_List"/>, (select name from sys_organ o where o.id = s.baid) AS baName
        FROM sys_user s
        WHERE id = #{id}
    </select>

    <insert id="save" parameterType="com.qh.modules.sys.entity.UserEntity">
        insert into sys_user
        (id, bapid, user_name, login_name, pass_word, create_time, update_time, status, phone, photo, email, create_id, update_id, remark, baid, salt)
        values
        (#{id}, #{bapid}, #{userName}, #{loginName}, #{passWord}, #{createTime}, #{updateTime}, #{status}, #{phone}, #{photo}, #{email}, #{createId}, #{updateId}, #{remark}, #{baid}, #{salt})
    </insert>

    <update id="update" parameterType="com.qh.modules.sys.entity.UserEntity">
        update sys_user
        <set>
            <if test="bapid != null">bapid = #{bapid},</if>
            <if test="baid != null">baid = #{baid},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="passWord != null">pass_word = #{passWord},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="photo != null">photo = #{photo},</if>
            <if test="email != null">email = #{email},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="updateId != null">update_id = #{updateId},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="salt != null">salt = #{salt}</if>
        </set>
        where id = #{id}
    </update>

    <!-- 更新密码 -->
    <update id="updatePassword" parameterType="map">
        update sys_user
        set pass_word = #{password}, salt = #{salt}
        where id = #{id}
    </update>

    <!-- 批量更新用户状态 -->
    <update id="updateBatchStatus" parameterType="map">
        update sys_user
        set status = #{status}
        where id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 批量重置密码 -->
    <update id="resetPassWord" parameterType="map">
        update sys_user
        set pass_word = #{password}, salt = #{salt}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 根据实体类查询 -->
    <select id="queryListByBean" resultType="com.qh.modules.sys.entity.UserWindowDto">
        select
            id, user_name as name, bapid
        from sys_user
        where 1=1
        <if test="name != null and name.trim() != ''">
            and name like concat('%', #{name}, '%')
        </if>
    </select>

    <!--根据登陆用户查询有效的用户-->
    <select id="queryByLoginName" resultType="com.qh.modules.sys.entity.UserEntity">
        SELECT 
        <include refid="Base_Column_List"/>, (SELECT name FROM sys_organ o WHERE o.id = u.baid) AS baName,
        (SELECT name FROM sys_organ o WHERE o.id = u.bapid) AS bapName
        FROM sys_user u
        WHERE login_name = #{0}
    </select>

    <!--用户对应的组织id,数据权限控制-->
    <select id="queryOrganIdByUserId" resultType="java.util.Map">
        select
            o.id organId, orl.role_id roleId
        from sys_user_role ur
        left join sys_organ_role orl on ur.role_id = orl.role_id
        left join sys_organ o on orl.organ_id = o.id
        where ur.user_id = #{userId} and o.type = #{type}
    </select>

    <!--用户对应的组织id,数据权限控制 返回数组-->
    <select id="queryOrganIdByUserIdArray" resultType="java.lang.String">
        SELECT o.id organId, orl.role_id roleId
        FROM sys_user_role ur
        LEFT JOIN sys_role r on ur.role_id = r.id
        LEFT JOIN sys_organ_role orl ON ur.role_id = orl.role_id
        LEFT JOIN sys_organ o ON orl.organ_id = o.id
        WHERE ur.user_id = #{userId} AND o.type = #{type}
    </select>

    <select id="queryList" resultType="com.qh.modules.sys.entity.UserEntity" resultMap="userMap">
        select
        <include refid="Base_Column_List"/>, (select name from sys_organ o where o.id = s.baid) as baName,
        (select name from sys_organ o where o.id = s.bapid) as bapName
        from sys_user s
        where 1=1
        <if test="userName != null and userName.trim() != ''">
            and user_name like concat('%', #{userName}, '%')
        </if>

        <!-- 数据过滤 -->
        ${dataAuthSql}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
    </select>

    <delete id="delete">
        delete from sys_user where id = #{id}
    </delete>

    <delete id="deleteBatch">
        delete from sys_user where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>