<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qh.modules.activiti.dao.ExtendActBusinessDao">
    
    <resultMap id="extendActBusinessMap" type="com.qh.modules.activiti.entity.ExtendActBusinessEntity">
        <result property="id" column="id"/>
        <result property="bapid" column="bapid"/>
        <result property="baid" column="baid"/>
        <result property="name" column="name"/>
        <result property="actKey" column="act_key"/>
        <result property="classurl" column="classurl"/>
        <result property="type" column="type"/>
        <result property="parentId" column="parent_id"/>
        <result property="sort" column="sort"/>
        <result property="open" column="open"/>
        <result property="remark" column="remark"/>
        <result property="createId" column="create_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateId" column="update_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, baid, bapid, name, act_key, type, classurl, parent_id, sort, open, remark, create_id, create_time, update_id, update_time
    </sql>

    <select id="queryObject" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
        select
        <include refid="Base_Column_List"/>, (select name from extend_act_business b where b.id = a.parent_id) as parentName
        from extend_act_business a
        where id = #{id}
    </select>

    <select id="queryBusTree" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
        select
        <include refid="Base_Column_List"/>
        from extend_act_business
        where type = #{type1} or type = #{type2}
    </select>

    <select id="queryList" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
        select
        <include refid="Base_Column_List"/>
        from extend_act_business
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <!--根据extend_act_model中的modelid查询对应业务-->
    <select id="queryActBusByModelId" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
        select
            b.id as id, b.classurl as classurl
        from extend_act_model m
        left join extend_act_business b on m.extend_act_business_id = b.id
        where m.model_id = #{modelId}
    </select>
    <!--查询所有业务相关的回调函数-->
    <select id="queryCalBackByPid" resultType="java.util.Map">
        select
            classurl as value, name
        from extend_act_business
        where parent_id = #{parentId}
    </select>
    <!--根据流程key查询-->
    <select id="queryByActKey" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
          select
            <include refid="Base_Column_List"/>
          from extend_act_business
          where act_key = #{actKey}
    </select>

    <select id="queryListByBean" resultType="com.qh.modules.activiti.entity.ExtendActBusinessEntity" resultMap="extendActBusinessMap">
        select
        <include refid="Base_Column_List"/>, (select name from extend_act_business b where b.id = a.parent_id) as parentName
        from extend_act_business a
        where 1=1
        <if test="name != null and name != ''">
            and name like concat('%', #{name}, '%')
        </if>
        <if test="type != null and type != ''">
            and type = #{type}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from extend_act_business
    </select>

    <insert id="save" parameterType="com.qh.modules.activiti.entity.ExtendActBusinessEntity">
        insert into extend_act_business
        (
            `id`,
            `name`,
            `bapid`,
            `baid`,
            `act_key`,
            `classurl`,
            `type`,
            `parent_id`,
            `sort`,
            `open`,
            `remark`,
            `create_id`,
            `create_time`,
            `update_id`,
            `update_time`
        )
        values (
            #{id},
			#{name},
			#{bapid},
			#{baid},
			#{actKey},
			#{classurl},
			#{type},
			#{parentId},
			#{sort},
			#{open},
			#{remark},
			#{createId},
			#{createTime},
			#{updateId},
			#{updateTime}
        )
    </insert>

    <update id="update" parameterType="com.qh.modules.activiti.entity.ExtendActBusinessEntity">
        update extend_act_business
        <set>
            <if test="actKey != null">`act_key` = #{actKey}, </if>
            <if test="classurl != null">`classurl` = #{classurl}, </if>
            <if test="type != null">`type` = #{type}, </if>
            <if test="parentId != null">`parent_id` = #{parentId}, </if>
            <if test="sort != null">`sort` = #{sort}, </if>
            <if test="open != null">`open` = #{open}, </if>
            <if test="remark != null">`remark` = #{remark}, </if>
            <if test="createId != null">`create_id` = #{createId}, </if>
            <if test="createTime != null">`create_time` = #{createTime}, </if>
            <if test="updateId != null">`update_id` = #{updateId}, </if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
        delete from extend_act_business where id = #{id}
    </delete>

    <delete id="deleteBatch">
        delete from extend_act_business where id in 
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>