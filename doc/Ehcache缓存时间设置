timeToLiveSeconds和timeToIdleSeconds
timeToLiveSeconds=x：缓存自创建日期起至失效时的间隔时间x；
timeToIdleSeconds=y：缓存创建以后，最后一次访问缓存的日期至失效之时的时间间隔y；

如果仅有timeToLiveSeconds那么自创建时间开始 间隔x后缓存失效；
如果没有timeToLiveSeconds那么自最后一次访问缓存 间隔y后 缓存失效；
如果既有timeToLiveSeconds也有timeToIdleSeconds那么取最小数算作间隔时间；min(x,y);
经过测试其计算原则是：
若自创建缓存后一直都没有访问缓存，那么间隔x后失效，若自创建缓存后有N次访问缓存，那么计算(最后一次访问缓存时间+y ) 即：按照timeToIdleSeconds计算，但总存活时间不超过 y;

举例：
timeToIdleSeconds=120；
timeToLiveSeconds=180；
表示此缓存最多可以存活3分钟，如果期间超过2分钟未访问 那么此缓存失效


一、Ehcache是什么

EhCache是Hibernate的二级缓存技术之一，可以把查询出来的数据存储在内存或者磁盘，节省下次同样查询语句再次查询数据库，大幅减轻数据库压力。


二、Ehcache的使用场景是什么

1、首先最主要就是页面缓存。
网站页面的数据来源非常广泛的，大多数来自不同的对象，而且有可能来自不同的db，所以给页面做缓存是一个不错的主意。

2、常用数据的缓存
一些配置信息，如后台的某些不经常改变的设置都可以缓存起来。

三、Ehcache使用的注意点
1、比较少的更新数据表的情况
2、对并发要求不是很严格的情况
多台应用服务器中的缓存是不能进行实时同步的。
3、对一致性要求不高的情况下
因为Ehcache本地缓存的特性，目前无法很好的解决不同服务器间缓存同步的问题，所以我们在一致性要求非常高的场合下，尽量使用Redis、Memcached等集中式缓存。

